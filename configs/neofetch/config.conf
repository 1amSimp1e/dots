# https://github.com/chick2d/neofetch-themes

print_info() {
   prin "​ ​​ $(color 6)  ​​ ​System Info"
    prin "$(color 16)┌──────────────────────────────────────────┐"

    info "​ ​ ​​$(color 1)  OS          " distro
#    info "​ ​​ ​$(color 1)  Host        " model
    info "​ ​​ ​$(color 1)  Kernel      " kernel
    info "​ ​​ ​$(color 1)  Uptime      " uptime
    info "​ ​​ ​$(color 2)  Packages    " packages
#    info "​ ​​ ​$(color 2)  Shell       " shell
    info "​ ​​ ​$(color 2)  Resolution  " resolution
    info "​ ​​ ​$(color 3)  DE          " de
#    info "​ ​​ ​$(color 3) 缾WM          " wm
#    info "​ ​​ ​$(color 12)  WM Theme    " wm_theme
#    info "$(color 13)  Theme       " theme
#    info "$(color 14)  Icons       " icons
    info "​ ​​ ​$(color 3)  Terminal    " term
#    info " Font        " font
#    info " Terminal Font   " term_font

    prin "$(color 16)└──────────────────────────────────────────┘"
    prin " "
    info "​ ​​ ​​​ $(color 6) " title
    prin "$(color 16)┌──────────────────────────────────────────┐"

    info "​ ​​ ​$(color 12)  CPU         " cpu
    info "​ ​​ ​$(color 12)  GPU         " gpu
    info "​ ​​ ​$(color 13)  GPU Driver  " gpu_driver  # Linux/macOS only
    info "​ ​​ ​$(color 13) ﬙ Memory      " memory

    # info "CPU Usage" cpu_usage
    # info "Disk" disk
    # info "Battery" battery
    # info "Song" song
    # [[ "$player" ]] && prin "Music Player" "$player"
    # info "Local IP" local_ip
    # info "Public IP" public_ip
    # info "Users" users
    # info "Locale" locale  # This only works on glibc systems.

    prin "$(color 16)└──────────────────────────────────────────┘"
    prin " "
    prin "​ ​​ ​​ ​​$(color 1)​ ​​ ​​$(color 2)​ ​​ ​​$(color 3)​ ​​ ​​$(color 4)​ ​​ ​​$(color 5)​ ​​ ​​$(color 6)​ ​​ ​​$(color 7)​ ​​ ​​$(color 8)​ ​​ ​​$(color 16)"
}


# Shorten the output of the kernel function.
kernel_shorthand="off"

# Shorten the output of the distro function
distro_shorthand="off"

# Show/Hide OS Architecture.
os_arch="on"

# Shorten the output of the uptime function
uptime_shorthand="on"

# Show memory pecentage in output.
memory_percent="off"

# Change memory output unit ('kib', 'mib', 'gib')
memory_unit="mib"

# Show/Hide Package Manager names.
# Values:  'on', 'tiny' 'off'
# on:   '998 (pacman), 8 (flatpak), 4 (snap)'
# tiny: '908 (pacman, flatpak, snap)'
# off:  '908'
package_managers="on"

# Show the path to $SHELL
# Example:
# on:  '/bin/bash'
# off: 'bash'
shell_path="off"

# Show $SHELL version
shell_version="on"

# Display refresh rate next to each monitor
refresh_rate="off"

# Show Desktop Environment version
de_version="on"

# Text Colors
# Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
# Each number represents a different part of the text in
# this order: 'title', '@', 'underline', 'subtitle', 'colon', 'info'
# Example:
# colors=(distro)      - Text is colored based on Distro colors.
# colors=(4 6 1 8 8 6) - Text is colored in the order above.
# colors=(4 7 7 4 7 7)
colors=(distro)

# Toggle bold text
bold="on"

# Enable/Disable Underline
underline_enabled="on"

# Underline character (string)
underline_char="─"

# Info Separator
separator=" •"

# Color block range. The range of colors to print.
# Values:   'num'
block_range=(0 7)

# Toggle color blocks
color_blocks="on"

# Color block width in spaces
block_width=3

# Color block height in lines
block_height=1

# Color Alignment
# Values: 'auto', 'num'
# Number specifies how far from the left side of the terminal (in spaces) to
# begin printing the columns, in case you want to e.g. center them under your
# text.
# Example:
# col_offset="auto" - Default behavior of neofetch
# col_offset=7      - Leave 7 spaces then print the colors
col_offset="auto"

# Progress Bar characters
bar_char_elapsed="-"
bar_char_total="="

# Toggle Progress Bar border
bar_border="on"

# Progress bar length in spaces
# Number of chars long to make the progress bars.
bar_length=15

# Progress bar colors
# When set to distro, uses your distro's logo colors.
# Values:   'distro', 'num'
bar_color_elapsed="distro"
bar_color_total="distro"

# Info display
# Display a bar with the info.
# Values:  'bar', 'infobar', 'barinfo', 'off'
# Example:
# bar:     '[---=======]'
# infobar: 'info [---=======]'
# barinfo: '[---=======] info'
# off:     'info'
cpu_display="off"
memory_display="off"
battery_display="off"
disk_display="off"

# Image backend.
# Values:   'ascii', 'caca', 'chafa', 'jp2a', 'iterm2', 'off',
#           'pot', 'termpix', 'pixterm', 'tycat', 'w3m', 'kitty'
image_backend="ascii"

# Image Source
# Default:  'auto'
# Values:   'auto', 'ascii', 'wallpaper', '/path/to/img', '/path/to/ascii', '/path/to/dir/'
#           'command output (neofetch --ascii "$(fortune | cowsay -W 30)")'
image_source="${HOME}/.config/neofetch/ascii.txt"

# Ascii distro (Which distro's ascii art to display).
# Default: 'auto'
# Values:  'auto', 'distro_name'
ascii_distro="arch_small"

# Ascii Colors
# Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
# Example:
# ascii_colors=(distro)      - Ascii is colored based on Distro colors.
# ascii_colors=(4 6 1 8 8 6) - Ascii is colored using these colors.
ascii_colors=(distro)

# Whether or not to bold the ascii logo.
ascii_bold="on"

# Image loop
# Setting this to on will make neofetch redraw the image constantly until
# Ctrl+C is pressed. This fixes display issues in some terminal emulators.
image_loop="off"

# Thumbnail directory
# Default: '~/.cache/thumbnails/neofetch'
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"

# Crop mode
# Values:   'normal', 'fit', 'fill'
# See this wiki page to learn about the fit and fill options.
# https://github.com/dylanaraps/neofetch/wiki/What-is-Waifu-Crop%3F
crop_mode="normal"

# Crop offset
# Note: Only affects 'normal' crop mode.
# Values:   'northwest', 'north', 'northeast', 'west', 'center'
#           'east', 'southwest', 'south', 'southeast'
crop_offset="center"

# Image size
# The image is half the terminal width by default.
# Values:  'auto', '00px', '00%', 'none'
image_size="auto"

# Gap between image and text. Can be a positive or negative integer
gap=5

# Image offsets
# Only works with the w3m backend.
# Values:  'px'
yoffset=0
xoffset=0

# Image background color
# Only works with the w3m backend.
# Values:  'color', 'blue'
background_color=

# Stdout mode
# Turn off all colors and disables image backend (ASCII/Image).
# Useful for piping into another command.
stdout="off"

